"use strict";function FormAuthController(e,t,o){this.authError,this.login=function(n){var l=this;console.log("Auth.getUser()"),console.log(t.getUser()),console.log(n),e.post("/login",n).then(function(e){console.log(e.data),e.data.id&&(t.setUser(e.data),o.go("home"))}).catch(function(e){console.log(e.data),l.authError=e.data})}}function FormRegisterController(e,t){this.errorValidate,this.register=function(o){var n=this;console.log(o),e.post("/register",o).then(function(e){console.log("response",e),t.go("home")}).catch(function(e){console.log(e),console.log(e.data),n.errorValidate=e.data})}}function EventListController(e,t){var o=this;console.log(o.author),this.openComponentModal=function(){console.log(o.author),e.open({animation:!0,component:"eventModal",resolve:{author:function(){return o.author}}}).result.then(function(){t.reload()})}}function modalComponentController(e){var t=this;e.get("/users").then(function(e){console.log(e.data),t.users=e.data}),e.get("/drinks").then(function(e){console.log(e.data),t.drinks=e.data}),t.$onInit=function(){},t.ok=function(o){o.author_id=t.resolve.author,console.log("newEvent",o),e.post("/events/",o).then(function(e){console.log(e.data)}),t.close({$value:t.newEvent})},t.cancel=function(){t.dismiss({$value:"cancel"})}}function EventDetailController(){}function InviteDetailController(e,t,o){var n=this;this.openComponentModal=function(){e.open({animation:!0,component:"modalComponent",resolve:{invite:function(){return n.invite}}}).result.then(function(){o.reload()})}}function ModalComponentController(e){var t=this;t.$onInit=function(){t.invite=t.resolve.invite,t.answer={}},t.ok=function(){var o=t.invite.invites[0]._id;t.answer.isReady||(t.answer.drinks=[]),t.answer.isReady&&(delete t.answer.drinks._id,console.log(t.answer.drinks)),e.post("/invite/"+o,t.answer).then(function(e){console.log(e.data)}),t.close({$value:t.answer})},t.cancel=function(){t.dismiss({$value:"cancel"})}}function InviteListController(){this.$onInit=function(){console.log("this.invites",this.invites),console.log("this.answered",this.answered),this.labelbutton="Изменить решение",null==this.isready&&(this.labelbutton="Ответить на приглашение")}}function UserNavigateController(e){console.log("this.mame"),console.log(this.name)}angular.module("partyApp",["ui.bootstrap","ui.router","core","components"]),angular.module("components",["formAuth","homePage","formRegister"]),angular.module("core",["core.auth"]),angular.module("formAuth",["core.auth"]),angular.module("formRegister",["core.auth"]),angular.module("homePage",["userNav","inviteList","inviteDetail","eventList","eventDetail"]),angular.module("core.auth",[]),angular.module("eventList",[]),angular.module("eventDetail",[]),angular.module("inviteDetail",[]),angular.module("inviteList",[]),angular.module("userNav",[]),angular.module("partyApp").config(["$stateProvider",function(e){"ngInject";function t(e,t){console.log(e.getUser()),e.setUser(""),console.log(e.getUser())}var o={name:"login",url:"/login",component:"formAuth"},n={name:"register",url:"/register",component:"formRegister"},l={name:"home",url:"/",component:"homePage"},r={name:"logout",url:"/logout",template:'<h2>Вы покинули сайт</h2> <a ui-sref="login">Войти</a>',onEnter:t};e.state(o),e.state(n),e.state(l),e.state(r)}]),FormAuthController.$inject=["$http","Auth","$state"],angular.module("formAuth").component("formAuth",{templateUrl:"components/form-auth/form-auth.template.html",controller:FormAuthController}),FormRegisterController.$inject=["$http","$state"],angular.module("formRegister").component("formRegister",{templateUrl:"components/form-register/form-register.template.html",controller:FormRegisterController}),angular.module("homePage").component("homePage",{templateUrl:"components/home-page/home-page.template.html",controller:"HomePageController"}),angular.module("homePage").controller("HomePageController",["Auth","$state","$http",function(e,t,o){var n=this;n.user=e.getUser(),console.log("home-page"),console.log(this.user),n.user?(o.get("/users/"+n.user.id+"/invites").then(function(e){console.log(e.data),n.allInvites=e.data}),o.get("/users/"+n.user.id+"/events").then(function(e){console.log(e),n.events=e.data})):(console.log("Требуется авторизация!"),t.go("login"))}]),angular.module("core.auth").factory("Auth",[function(){var e;return{getUser:function(){return e},setUser:function(t){e=t,console.log("Пользователь сохранен")}}}]),modalComponentController.$inject=["$http"],EventListController.$inject=["$uibModal","$state"],angular.module("eventList").component("eventList",{templateUrl:"components/home-page/event-list/event-list.template.html",controller:EventListController,bindings:{events:"<",author:"<"}}),angular.module("eventList").component("eventModal",{templateUrl:"components/home-page/event-list/myModalContent.html",bindings:{resolve:"<",close:"&",dismiss:"&"},controller:modalComponentController}),angular.module("eventDetail").component("eventDetail",{templateUrl:"components/home-page/event-detail/event-detail.template.html",controller:EventDetailController,bindings:{event:"="}}),ModalComponentController.$inject=["$http"],InviteDetailController.$inject=["$uibModal","$document","$state"],angular.module("inviteDetail").component("inviteDetail",{templateUrl:"components/home-page/invite-detail/invite-detail.template.html",controller:InviteDetailController,bindings:{invite:"<",labelbutton:"<"}}),angular.module("inviteDetail").component("modalComponent",{templateUrl:"components/home-page/invite-detail/myModalContent.html",bindings:{resolve:"<",close:"&",dismiss:"&"},controller:ModalComponentController}),angular.module("inviteList").component("inviteList",{templateUrl:"components/home-page/invite-list/invite-list.template.html",controller:[InviteListController],bindings:{invites:"<",isready:"<"}}),UserNavigateController.$inject=["Auth"],angular.module("userNav").component("userNav",{templateUrl:"components/home-page/user-nav/user-nav.template.html",controller:UserNavigateController,bindings:{name:"="}});